//------------------------------------
//              #COLORS
//------------------------------------


//Output
.black-bgc {
    background-color: $black;
    color: $white;
}

.black-c {
    color: $text-color;
}

.white-bgc {
    background-color: $white;
    color: $text-color;
}

.white-c {
    color: $white;
}

@each $pair in $color-list {
    @for $i from 1 through length($shade-list)+1 {
        @if $i == length($shade-list)+1 {
            .#{nth($pair, 1)}-bgc {
                background-color: nth($pair, 2);
                color: contrasting-color(nth($pair, 2));
            }
            .#{nth($pair, 1)}-c {
                color: nth($pair, 2);
            }
        } 
        @else {
            .#{nth($pair, 1)}-d#{$i}-bgc {
                background-color: shade(nth($pair, 2), nth($shade-list, $i));
                color: contrasting-color(shade(nth($pair, 2), nth($shade-list, $i)));
            }

            .#{nth($pair, 1)}-l#{$i}-bgc {
                background-color: tint(nth($pair, 2), nth($shade-list, $i));
                color: contrasting-color(tint(nth($pair, 2), nth($shade-list, $i)));
            }

            .#{nth($pair, 1)}-d#{$i}-c {
                color: shade(nth($pair, 2), nth($shade-list, $i));
            }

            .#{nth($pair, 1)}-l#{$i}-c {
                color: tint(nth($pair, 2), nth($shade-list, $i));
            }
        }
    }
}