//------------------------------------
//              #TYPOGRAPHY
//------------------------------------

$light: wf_segoe-ui_light, wf_segoe-ui_semilight, wf_segoe-ui_normal, Arial, sans-serif;
$semibold: wf_segoe-ui_semibold, wf_segoe-ui_normal, Arial, sans-serif;
$regular: wf_segoe-ui_normal, wf_segoe-ui_semilight, wf_segoe-ui_light, Arial, sans-serif;
$semilight: wf_segoe-ui_semilight, wf_segoe-ui_normal, Arial, sans-serif;
$bold: wf_segoe-ui_bold, wf_segoe-ui_semibold, wf_segoe-ui_normal, Arial, sans-serif;

$typeList: (
  headline: (
    large: 62px,
    small: 46px,
    flex: calc(36px + 1.86vw)
  ),
  h1: (
    large: 46px,
    small: 34px,
    flex: calc(26.5px + 1.4vw)
  ),
  h2: (
    large: 34px,
    small: 26px,
    flex: calc(17.6px + 1.18vw)
  ),
  h3: (
    large: 24px,
    small: 20px,
    flex: calc(18.2px + 0.41vw)
  ),
  h4: (
    large: 20px,
    small: 18px,
    flex: calc(16.9px + 0.22vw)
  ),
  h5: (
    large: 18px,
    small: 16px,
    flex: calc(14.9px + 0.22vw)
  ),
  body: (
    large: 18px,
    small: 16px,
    flex: calc(14.9px + 0.22vw)
  ),
  body-alt: (
    large: 15px,
    small: 14px,
    flex: calc(13.5px + 0.11vw)
  ),
  caption: (
    large: 13px,
    small: 12px,
    flex: calc(11.5px + 0.11vw)
  ),
  caption-alt: (
    large: 11px,
    small: 10px,
    flex: calc(9.5px + 0.11vw)
  )

);





//------------------------------------
//              #COLORS
//------------------------------------


$lightblue: #00BCF2;
$blue: #0078D7;
$midblue: #00188F;
$darkblue: #002050;
$lightpurple: #B4A0FF;
$purple: #5C2D91;
$darkpurple: #32145A;
$lightmagenta: #E3008C;
$magenta: #B4009E;
$darkmagenta: #5C005C;
$red: #E81123;
$darkred: #A80000;
$lightorange: #FF8C00;
$orange: #D83B01;
$lightyellow: #FFF100;
$yellow: #FFB900;
$lightgreen: #BAD80A;
$green: #107C10;
$darkgreen: #004B1C;
$lightteal: #00B294;
$teal: #008272;
$darkteal: #004B50;
$gray: #767676;
$darkgray: #2F2F2F;
$white: #FFFFFF;
$black: #000000;
$text-color: $darkgray;

$color-list: ("lightblue", $lightblue), ("blue", $blue), ("midblue", $midblue), ("darkblue", $darkblue),
("lightpurple", $lightpurple), ("purple", $purple), ("darkpurple", $darkpurple), ("lightmagenta", $lightmagenta),
("magenta", $magenta), ("darkmagenta", $darkmagenta), ("red", $red),
("darkred", $darkred), ("lightorange", $lightorange), ("orange", $orange),
("lightyellow", $lightyellow), ("yellow", $yellow), ("lightgreen", $lightgreen),
("green", $green), ("darkgreen", $darkgreen), ("lightteal", $lightteal), ("teal", $teal),
("darkteal", $darkteal), ("gray", $gray);
$shade-list: (20%, 40%, 60%, 80%);


//Functions
@function tint($color, $percentage) {
    @return mix(#FFFFFF, $color, $percentage);
}

@function shade($color, $percentage) {
    @return mix(#000000, $color, $percentage);
}


// Brightness math based on:
//   http://www.nbdtech.com/Blog/archive/2008/04/27/Calculating-the-Perceived-Brightness-of-a-Color.aspx
 
$red-magic-number: 241;
$green-magic-number: 691;
$blue-magic-number: 68;
$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;
 
@function brightness($color) {
  // Extract color components
  $red-component: red($color);
  $green-component: green($color);
  $blue-component: blue($color);
 
  // Calculate a brightness value in 3d color space between 0 and 255
  $number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * $blue-component * $blue-magic-number)) / $brightness-divisor);
 
  // Convert to percentage and return
  @return 100% * $number / 255;
}

@function contrasting-color($color) {
  @if brightness($color) < 55% {
    @return $white;
  } @else {
    @return $text-color;
  }
}


//Mixins
@mixin primary-color-ladder($color) {
    .primary-bgc {
        background-color: $color;
        color: contrasting-color($color);
    }

    .primary-c {
        color: $color;
    }

    @for $i from 1 through length($shade-list)+1 {
        .primary-d#{$i}-bgc {
            background-color: shade($color, nth($shade-list, $i));
            color: contrasting-color(shade($color, nth($shade-list, $i)));
        }
        .primary-l#{$i}-bgc {
            background-color: tint($color, nth($shade-list, $i));
            color: contrasting-color(tint($color, nth($shade-list, $i)));
        }

        .primary-d#{$i}-c {
            color: shade($color, nth($shade-list, $i));
        }
        .primary-l#{$i}-c {
            color: tint($color, nth($shade-list, $i));
        }
    }
}

@mixin secondary-color-ladder($color) {
    .secondary-bgc {
        background-color: $color;
        color: contrasting-color($color);
    }

    .secondary-c {
        color: $color;
    }

    @for $i from 1 through length($shade-list)+1 {
        .secondary-d#{$i}-bgc {
            background-color: shade($color, nth($shade-list, $i));
            color: contrasting-color(shade($color, nth($shade-list, $i)));
        }
        .secondary-l#{$i}-bgc {
            background-color: tint($color, nth($shade-list, $i));
            color: contrasting-color(tint($color, nth($shade-list, $i)));
        }

        .secondary-d#{$i}-c {
            color: shade($color, nth($shade-list, $i));
        }
        .secondary-l#{$i}-c {
            color: tint($color, nth($shade-list, $i));
        }
    }
}




//------------------------------------
//              #FONTS
//------------------------------------

// List of spacing options. Each option has three ramps: 
// large (large viewports), small (mobile), and flex (everything in between)
$spacing-list: (
  sp6: (
    large: 70px,
    small: 54px,
    flex: calc(44.5px + 1.8vw)
  ),
  sp5: (
    large: 60px,
    small: 40px,
    flex: calc(37px + 1.25vw)
  ),
  sp4: (
    large: 40px,
    small: 33px,
    flex: calc(29.5px + 0.75vw)
  ),
  sp3: (
    large: 28px,
    small: 24px,
    flex: calc(22px + 0.4vw)
  ),
  sp2: (
    large: 20px,
    small: 18px,
    flex: calc(17px + 0.2vw)
  ),
  sp1: (
    large: 12px,
    small: 12px,
    flex: 12px
  )
);
